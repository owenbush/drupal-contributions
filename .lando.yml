name: recurring-events-testing
recipe: drupal9
config:
  webroot: web
services:
  appserver:
    webroot: web
    config:
      php: .vscode/php.ini
    build_as_root:
      # Note that you will want to use the script for the major version of node you want to install
      # See: https://github.com/nodesource/distributions/blob/master/README.md#installation-instructions
      - curl -sL https://deb.nodesource.com/setup_12.x | bash -
      - apt-get install -y nodejs
      - npm install --global yarn
    run:
      - cd /app/web && composer require drush/drush && composer install
      - mkdir -p private/browsertest_output
      - yarn install --non-interactive --cwd /app/web/core
    overrides:
      environment:
        SIMPLETEST_BASE_URL: "https://recurring-events-testing.lndo.site/"
        SIMPLETEST_DB: "sqlite://localhost/tmp/db.sqlite"
        MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","chromeOptions":{"args":["--disable-gpu","--headless", "--no-sandbox"]}}, "http://chrome:9515"]'
        # Nightwatch
        DRUPAL_TEST_BASE_URL: 'http://appserver'
        DRUPAL_TEST_DB_URL: 'mysql://drupal9:drupal9@database:3306/drupal9'
        DRUPAL_TEST_WEBDRIVER_HOSTNAME: chrome
        DRUPAL_TEST_WEBDRIVER_PORT: 9515
        DRUPAL_TEST_CHROMEDRIVER_AUTOSTART: 'false'
        DRUPAL_TEST_WEBDRIVER_CHROME_ARGS: "--disable-gpu --headless --no-sandbox"
        DRUPAL_NIGHTWATCH_OUTPUT: reports/nightwatch
        DRUPAL_NIGHTWATCH_IGNORE_DIRECTORIES: node_modules,vendor,.*,sites/*/files,sites/*/private,sites/simpletest
  chrome:
    type: compose
    app_mount: false
    services:
      image: drupalci/webdriver-chromedriver:production
      command: chromedriver --log-path=/tmp/chromedriver.log --verbose --whitelisted-ips=

tooling:
  drush:
    service: appserver
    cmd:
      /app/web/vendor/drush/drush/drush --root=/app/web --uri=https://recurring-events-testing.lndo.site
  si:
    service: appserver
    description: Install Drupal
    cmd:
      - appserver: /app/scripts/site-install.sh
  patch:
    service: appserver
    description: Get a patch from a Drupal project issue queue
    cmd:
      - appserver: php /app/scripts/patch-helpers.php
    options:
      url:
        describe: The url of the patch from the issue queue
  revert:
    service: appserver
    description: Apply a patch from a Drupal project issue queue
    cmd:
      - appserver: php /app/scripts/patch-helpers.php --revert
    patch:
      describe: The name of the patch to revert; i.e. DESCRIPTION-XXXXXXX-YY.patch
  create-patch:
    service: appserver
    description: Creat a patch from your committed changes on your branch.
    cmd:
      - appserver: php /app/scripts/patch-helpers.php --create-patch
  phpunit:
    service: appserver
    user: www-data
    cmd:
      - appserver: php /app/web/vendor/bin/phpunit -c /app/phpunit.xml
  xdebug-on:
    service: appserver
    description: Enable xdebug for apache.
    cmd: "docker-php-ext-enable xdebug && /etc/init.d/apache2 reload"
    user: root
  xdebug-off:
    service: appserver
    description: Disable xdebug for apache.
    cmd: "rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && /etc/init.d/apache2 reload"
    user: root

  core-check:
    service: appserver
    cmd:
      - appserver: php /app/scripts/core-check.php

  nightwatch:
    service: appserver
    description: Run Nightwatch.js
    cmd: yarn test:nightwatch
    dir: /app/web/core

events:
  post-destroy:
    - chmod 777 -R web/sites/default
    - rm -rfv web
  pre-rebuild:
    - rm -rfv web
    - appserver: php /app/scripts/get-drupal.php
  post-rebuild:
    - appserver: /app/scripts/rebuild.sh
    - appserver: composer install
    - appserver: cd /app/web/modules/contrib && rm -rf recurring_events && git clone --branch '2.0.x' git@git.drupal.org:project/recurring_events.git
    - appserver: cd /app/web/core && git reset --hard origin/9.3.x && git clean -df
